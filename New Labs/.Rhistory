data$CorrectSame <- ifelse(
(data$CorrectAnswer == "different" & data$SameAnswer < 50) |
(data$CorrectAnswer == "same" & data$SameAnswer > 50),
"correct", "incorrect")
data$HowCorrectSimilarity <- ifelse(data$CorrectSimilarity == "incorrect", -abs(data$SimilarityAnswer - 50), abs(data$SimilarityAnswer-50))
data$HowCorrectSame <- ifelse(data$CorrectSame == "incorrect", -abs(data$SameAnswer - 50), abs(data$SameAnswer-50))
## Get the original file name for Audio1 as its own column
data$File1 <- str_sub(data$Audio1, 17,-1)
## Get the original file name for Audio2 as its own column
data$File2 <- str_sub(data$Audio1, 17,-1)
## Import Carmen's salience ratings
TUULS <- read_csv("TUULS_Samples.csv") %>%
rename(Salience = `Accent salience (Carmen)`)
TUULS <- TUULS %>%
select(-(2:5))
## Merge salience
data <- left_join(data,TUULS, by="File1")
### Get column for familiarity with that particular accent
data$Familiarity <- ifelse(data$Audio1Accent == "SSBE", data$SSBEFamiliarity,
ifelse(data$Audio1Accent == "Middlesbrough", data$MiddlesbroughFamiliarity,
ifelse(data$Audio1Accent == "Newcastle", data$NewcastleFamiliarity, 0)))
View(TUULS)
## Merge salience
TUULS$File1 <- TUULS$File
data <- left_join(data,TUULS, by="File1")
### Get column for familiarity with that particular accent
data$Familiarity <- ifelse(data$Audio1Accent == "SSBE", data$SSBEFamiliarity,
ifelse(data$Audio1Accent == "Middlesbrough", data$MiddlesbroughFamiliarity,
ifelse(data$Audio1Accent == "Newcastle", data$NewcastleFamiliarity, 0)))
data$Salience <- replace_na(data$Salience,"SSBE")
table <- data %>%
select(Audio1, Audio1Accent, Salience) %>%
unique() %>%
count(Salience, Audio1Accent)
## Let's merge H with H? and L with L?
data$SalienceHL <- ifelse(data$Salience == "H" | data$Salience == "H?", "H",
ifelse(data$Salience == "L" | data$Salience == "L?","L","SSBE"))
## Now, how many high/low salience Audio1s did we have for each accent?
table <- data %>%
select(Audio1, Audio1Accent, SalienceHL) %>%
unique() %>%
count(SalienceHL, Audio1Accent)
# View(table)
# View(table)
# View(table)
# View(table)
View(same_by_pair_mixed)
View(data1)
View(data2)
View(data)
View(qual_mixed)
View(full)
View(data)
View(data)
View(qualtrics_spread)
qualtrics_compare <- qualtrics_spread %>%
select(PROLIFIC_PID,
Age,
Gender,
Town,
County,
Pairlist,
Familiarity_Mid,
Familiarity_SSBE,
Familiarity_Nc,
Question,
Level,
typ,
sim,
same,
Comparison,
Audio1File,
Audio2File,
Audio1Accent,
Audio2Accent,
SalienceHL,
CorrectAnswer,
Order24)
game_compare <- data %>%
select(ProlificID,
Age,
Gender,
BirthTown_City,
BirthCounty,
Pairlist,
MiddlesbroughFamiliarity,
SSBEFamiliarity,
NewcastleFamiliarity,
QuestionName,
Level,
TypicalityAnswer,
SimilarityAnswer,
SameAnswer,
Comparison,
Audio1,
Audio2,
Audio1Accent,
Audio2Accent,
CorrectAnswer,
Order24,
EvidenceGiven,
ExpertAdviceConfidence,
ExpertAdviceType)
setwd("/Users/Thomas/Desktop/Humans_Machines/GitHub")
source("data_prep.R")
evidence <- data %>%
filter(Level == "3: evidence")
pirateplot(data = evidence,
formula = SameAnswer ~ EvidenceGiven * CorrectAnswer)
evidence$EvidenceGiven <- factor(evidence$EvidenceGiven, levels = c('fingerprint', 'DNA','footprint'))
contrasts(evidence$EvidenceGiven)
model <- lmer(data = evidence,
SameAnswer ~
EvidenceGiven*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ EvidenceGiven*CorrectAnswer)
model <- lm(data=evidence,
SameAnswer ~ Order24)
evidence$resid <- resid(model)
model <- lmer(data = evidence,
resid ~
EvidenceGiven*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ EvidenceGiven*CorrectAnswer)
expert_verbal <- data %>%
filter(Level == "3: expert" & ExpertAdviceType == "v")
setwd("/Users/Thomas/Desktop/Humans_Machines/GitHub/")
source("Qualtrics_data_prep.R")
data$Pairlist <- str_sub(data$QuestionSetName,11,11)
qualtrics_compare <- qualtrics_spread %>%
select(PROLIFIC_PID,
Age,
Gender,
Town,
County,
Pairlist,
Familiarity_Mid,
Familiarity_SSBE,
Familiarity_Nc,
Question,
Level,
typ,
sim,
same,
Comparison,
Audio1File,
Audio2File,
Audio1Accent,
Audio2Accent,
SalienceHL,
CorrectAnswer,
Order24)
game_compare <- data %>%
select(ProlificID,
Age,
Gender,
BirthTown_City,
BirthCounty,
Pairlist,
MiddlesbroughFamiliarity,
SSBEFamiliarity,
NewcastleFamiliarity,
QuestionName,
Level,
TypicalityAnswer,
SimilarityAnswer,
SameAnswer,
Comparison,
Audio1,
Audio2,
Audio1Accent,
Audio2Accent,
CorrectAnswer,
Order24,
EvidenceGiven,
ExpertAdviceConfidence,
ExpertAdviceType)
salience <- qualtrics_compare %>%
select(Question, Pairlist, SalienceHL) %>%
unique()
game_compare <- left_join(game_compare,salience,by=c("QuestionName" = "Question", "Pairlist" = "Pairlist"))
game_compare$SSBEFamiliarity <- 100 * game_compare$SSBEFamiliarity
game_compare$MiddlesbroughFamiliarity <- 100 * game_compare$MiddlesbroughFamiliarity
game_compare$NewcastleFamiliarity <- 100 * game_compare$NewcastleFamiliarity
game_compare$Level <- dplyr::recode(game_compare$Level,
`1: training` = "1",
`2: jury` = "2")
View(qualtrics_compare)
View(game_compare)
str_sub(game_compare$Audio1, 15,-1)
str_sub(game_compare$Audio1, 17,-1)
game_compare$Audio1 <- str_sub(game_compare$Audio1, 17,-1)
game_compare$Audio2 <- str_sub(game_compare$Audio2, 17,-1)
qualtrics_compare$Experiment <- "Qualtrics"
game_compare$Experiment <- "Game"
qualtrics_compare$Pairlist <- as.factor(qualtrics_compare$Pairlist)
game_compare$Pairlist <- as.factor(game_compare$Pairlist)
qualtrics_compare$Level <- as.factor(qualtrics_compare$Level)
game_compare$Level <- as.factor(game_compare$Level)
qual_game <- bind_rows(qualtrics_compare,game_compare)
View(qual_game)
## Find same by pair for the mixed
same_by_pair_mixed <- qual_mixed %>%
group_by(PairName, Audio1, Audio2) %>%
summarise(mean_sameness = mean(SameAnswer))
# Get a pairname column that works for both Qualtrics and game
qual_game$PairName <- paste(qual_game$Pairlist, qual_game$QuestionName, sep="_")
qual_mixed <- qual_game %>%
filter(Experiment == "Qualtrics") %>%
filter((Audio1Accent == "Middlesbrough" & Audio2Accent == "Newcastle") | (Audio1Accent == "Newcastle" & Audio2Accent == "Middlesbrough"))
pirateplot(formula = SameAnswer ~ SalienceHL,
data = qual_mixed,
main = "H vs. L Salience Mixed Pairs (Qualtrics, all levels)")
qual_mixed <- qual_game %>%
filter(Experiment == "Qualtrics") %>%
filter((Audio1Accent == "Middlesbrough" & Audio2Accent == "Newcastle") | (Audio1Accent == "Newcastle" & Audio2Accent == "Middlesbrough"))
pirateplot(formula = SameAnswer ~ SalienceHL,
data = qual_mixed,
main = "H vs. L Salience Mixed Pairs (Qualtrics, all levels)")
model <- lmer(data = qual_mixed,
SameAnswer ~
SalienceHL +
(1|ProlificID))
View(qual_mixed)
pirateplot(formula = SameAnswer ~ SalienceHL,
data = qual_mixed,
main = "H vs. L Salience Mixed Pairs (Qualtrics, all levels)")
setwd("/Users/Thomas/Desktop/Humans_Machines/GitHub")
source("data_prep.R")
### Compare pairwise differences within Evidence types ####
evidence <- data %>%
filter(Level == "3: evidence")
pirateplot(data = evidence,
formula = SameAnswer ~ EvidenceGiven * CorrectAnswer)
evidence$EvidenceGiven <- factor(evidence$EvidenceGiven, levels = c('fingerprint', 'DNA','footprint'))
contrasts(evidence$EvidenceGiven)
model <- lmer(data = evidence,
SameAnswer ~
EvidenceGiven*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ EvidenceGiven*CorrectAnswer)
# Take into account order?
model <- lm(data=evidence,
SameAnswer ~ Order24)
evidence$resid <- resid(model)
model <- lmer(data = evidence,
resid ~
EvidenceGiven*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ EvidenceGiven*CorrectAnswer)
### Compare pairwise differences within Expert advice types (verbal) ####
expert_verbal <- data %>%
filter(Level == "3: expert" & ExpertAdviceType == "v")
pirateplot(data = expert_verbal,
formula = SameAnswer ~ ExpertAdviceConfidence * CorrectAnswer)
model <- lmer(data = expert_verbal,
SameAnswer ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
### Compare pairwise differences within Expert advice types (numeric) ####
expert_numeric <- data %>%
filter(Level == "3: expert" & ExpertAdviceType == "n")
pirateplot(data = expert_numeric,
formula = SameAnswer ~ ExpertAdviceConfidence * CorrectAnswer)
model <- lmer(data = expert_numeric,
SameAnswer ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
### Compare Level 3 evidence as baseline vs. Level 3 expert (verbal) ####
evidence_expert_verbal <- data %>%
filter(Level == "3: evidence" | (Level == "3: expert" & ExpertAdviceType == "v"))
evidence_expert_verbal$ExpertAdviceConfidence <- ifelse( evidence_expert_verbal$ExpertAdviceConfidence == "0", "0: Evidence", evidence_expert_verbal$ExpertAdviceConfidence)
pirateplot(data = evidence_expert_verbal,
formula = SameAnswer ~ ExpertAdviceConfidence * CorrectAnswer)
model <- lmer(data = evidence_expert_verbal,
SameAnswer ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
### Compare Level 3 evidence as baseline vs. Level 3 expert (numeric) ####
evidence_expert_numeric <- data %>%
filter(Level == "3: evidence" | (Level == "3: expert" & ExpertAdviceType == "n"))
evidence_expert_numeric$ExpertAdviceConfidence <- ifelse( evidence_expert_numeric$ExpertAdviceConfidence == "0", "0: Evidence", evidence_expert_numeric$ExpertAdviceConfidence)
pirateplot(data = evidence_expert_numeric,
formula = SameAnswer ~ ExpertAdviceConfidence * CorrectAnswer)
model <- lmer(data = evidence_expert_numeric,
SameAnswer ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
### Compare Level 2 jury as baseline vs. Level 3 evidence ####
jury_evidence <- data %>%
filter(Level == "2: jury" | Level == "3: evidence")
jury_evidence$EvidenceGiven <- ifelse( jury_evidence$EvidenceGiven == "", "0: Jury", jury_evidence$EvidenceGiven)
pirateplot(data = jury_evidence,
formula = SameAnswer ~ EvidenceGiven * CorrectAnswer)
model <- lmer(data = jury_evidence,
SameAnswer ~
EvidenceGiven*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ EvidenceGiven*CorrectAnswer)
emmeans(model, specs = pairwise ~ EvidenceGiven)
# Try out with residuals after accounting for order
model <- lm(data=jury_evidence,
SameAnswer ~ Order24)
jury_evidence$resid <- resid(model)
model <- lmer(data = jury_evidence,
resid ~
EvidenceGiven*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ EvidenceGiven*CorrectAnswer)
# no sig effects
emmeans(model, specs = pairwise ~ EvidenceGiven)
### Compare Level 2 jury as baseline vs. Level 3 expert (verbal) ####
jury_expert_verbal <- data %>%
filter(Level == "2: jury" | (Level == "3: expert" & ExpertAdviceType == "v"))
jury_expert_verbal$ExpertAdviceConfidence <- ifelse( jury_expert_verbal$ExpertAdviceConfidence == "0", "0: Jury", jury_expert_verbal$ExpertAdviceConfidence)
pirateplot(data = jury_expert_verbal,
formula = SameAnswer ~ ExpertAdviceConfidence * CorrectAnswer)
model <- lmer(data = jury_expert_verbal,
SameAnswer ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
# Try with accounting for order first
model <- lm(data=jury_expert_verbal,
SameAnswer ~ Order24)
jury_expert_verbal$resid <- resid(model)
model <- lmer(data = jury_expert_verbal,
resid ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
pirateplot(data = jury_expert_verbal,
formula = resid ~ ExpertAdviceConfidence * CorrectAnswer,
ylab = "Post-LMER residuals",
main = "Sameness ratings by expert confidence, verbal")
### Compare Level 2 jury as baseline vs. Level 3 expert (numeric) ####
jury_expert_numeric <- data %>%
filter(Level == "2: jury" | (Level == "3: expert" & ExpertAdviceType == "n"))
jury_expert_numeric$ExpertAdviceConfidence <- ifelse( jury_expert_numeric$ExpertAdviceConfidence == "0", "0: Jury", jury_expert_numeric$ExpertAdviceConfidence)
model <- lm(data=jury_expert_numeric,
SameAnswer ~ Order24)
jury_expert_numeric$resid <- resid(model)
model <- lmer(data = jury_expert_numeric,
resid ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
pirateplot(data = jury_expert_numeric,
formula = resid ~ ExpertAdviceConfidence * CorrectAnswer,
ylab = "Post-LMER residuals",
main = "Sameness ratings by expert confidence, numeric")
# Try with accounting for order first
model <- lm(data=jury_expert_numeric,
SameAnswer ~ Order24)
jury_expert_numeric$resid <- resid(model)
model <- lmer(data = jury_expert_numeric,
resid ~
ExpertAdviceConfidence*CorrectAnswer +
(1|PairName))
summary(model)
emmeans(model, specs = pairwise ~ ExpertAdviceConfidence*CorrectAnswer)
### Add in Qualtrics data ####
setwd("/Users/Thomas/Desktop/Humans_Machines/GitHub/")
source("Qualtrics_data_prep.R")
View(qualtrics)
View(qualtrics_spread)
data$Pairlist <- str_sub(data$QuestionSetName,11,11)
qualtrics_compare <- qualtrics_spread %>%
select(PROLIFIC_PID,
Age,
Gender,
Town,
County,
Pairlist,
Familiarity_Mid,
Familiarity_SSBE,
Familiarity_Nc,
Question,
Level,
typ,
sim,
same,
Comparison,
Audio1File,
Audio2File,
Audio1Accent,
Audio2Accent,
SalienceHL,
CorrectAnswer,
Order24)
game_compare <- data %>%
select(ProlificID,
Age,
Gender,
BirthTown_City,
BirthCounty,
Pairlist,
MiddlesbroughFamiliarity,
SSBEFamiliarity,
NewcastleFamiliarity,
QuestionName,
Level,
TypicalityAnswer,
SimilarityAnswer,
SameAnswer,
Comparison,
Audio1,
Audio2,
Audio1Accent,
Audio2Accent,
CorrectAnswer,
Order24,
EvidenceGiven,
ExpertAdviceConfidence,
ExpertAdviceType)
salience <- qualtrics_compare %>%
select(Question, Pairlist, SalienceHL) %>%
unique()
game_compare <- left_join(game_compare,salience,by=c("QuestionName" = "Question", "Pairlist" = "Pairlist"))
game_compare$SSBEFamiliarity <- 100 * game_compare$SSBEFamiliarity
game_compare$MiddlesbroughFamiliarity <- 100 * game_compare$MiddlesbroughFamiliarity
game_compare$NewcastleFamiliarity <- 100 * game_compare$NewcastleFamiliarity
game_compare$Level <- dplyr::recode(game_compare$Level,
`1: training` = "1",
`2: jury` = "2")
# Rename so columns match
qualtrics_compare <- rename(qualtrics_compare,
ProlificID = PROLIFIC_PID,
BirthTown_City = Town,
BirthCounty = County,
MiddlesbroughFamiliarity = Familiarity_Mid,
SSBEFamiliarity = Familiarity_SSBE,
NewcastleFamiliarity = Familiarity_Nc,
QuestionName = Question,
TypicalityAnswer = typ,
SimilarityAnswer = sim,
SameAnswer = same)
View(qualtrics_compare)
game_compare$Audio1 <- str_sub(game_compare$Audio1, 17,-1)
game_compare$Audio2 <- str_sub(game_compare$Audio2, 17,-1)
View(game_compare)
qualtrics_compare$Experiment <- "Qualtrics"
game_compare$Experiment <- "Game"
qualtrics_compare$Pairlist <- as.factor(qualtrics_compare$Pairlist)
game_compare$Pairlist <- as.factor(game_compare$Pairlist)
qualtrics_compare$Level <- as.factor(qualtrics_compare$Level)
game_compare$Level <- as.factor(game_compare$Level)
qual_game <- bind_rows(qualtrics_compare,game_compare)
View(qual_game)
game_compare$Audio1File <- str_sub(game_compare$Audio1, 17,-1)
game_compare$Audio2File <- str_sub(game_compare$Audio2, 17,-1)
game_compare <- game_compare %>%
select(-Audio1, -Audio2)
qualtrics_compare$Experiment <- "Qualtrics"
game_compare$Experiment <- "Game"
qualtrics_compare$Pairlist <- as.factor(qualtrics_compare$Pairlist)
game_compare$Pairlist <- as.factor(game_compare$Pairlist)
qualtrics_compare$Level <- as.factor(qualtrics_compare$Level)
game_compare$Level <- as.factor(game_compare$Level)
qual_game <- bind_rows(qualtrics_compare,game_compare)
View(qual_game)
# Get a pairname column that works for both Qualtrics and game
qual_game$PairName <- paste(qual_game$Pairlist, qual_game$QuestionName, sep="_")
View(qual_game)
qual_mixed <- qual_game %>%
filter(Experiment == "Qualtrics") %>%
filter((Audio1Accent == "Middlesbrough" & Audio2Accent == "Newcastle") | (Audio1Accent == "Newcastle" & Audio2Accent == "Middlesbrough"))
pirateplot(formula = SameAnswer ~ SalienceHL,
data = qual_mixed,
main = "H vs. L Salience Mixed Pairs (Qualtrics, all levels)")
model <- lmer(data = qual_mixed,
SameAnswer ~
SalienceHL +
(1|ProlificID))
summary(model)
## Find same by pair for the mixed
same_by_pair_mixed <- qual_mixed %>%
group_by(PairName, Audio1, Audio2) %>%
summarise(mean_sameness = mean(SameAnswer))
## Find same by pair for the mixed
same_by_pair_mixed <- qual_mixed %>%
group_by(PairName, Audio1File, Audio2File) %>%
summarise(mean_sameness = mean(SameAnswer))
View(same_by_pair_mixed)
write.csv(same_by_pair_mixed, "/Users/Thomas/Desktop/Humans_Machines/same_by_pair_mixed.csv")
## Find sameness by pair for the mixed
same_by_pair_mixed <- qual_mixed %>%
group_by(PairName, Audio1File, Audio2File, SalienceHL) %>%
summarise(mean_sameness = mean(SameAnswer))
write.csv(same_by_pair_mixed, "/Users/Thomas/Desktop/Humans_Machines/same_by_pair_mixed.csv")
View(same_by_pair_mixed)
setwd("~/Documents/York (Canada)/LING 4220/Lab Manual")
setwd("~/Documents/York (Canada)/LING 4220/Lab Manual")
setwd("~/Documents/York (Canada)/LING 4220/Lab Manual/New_Labs")
source("~/.active-rstudio-document", echo=TRUE)
